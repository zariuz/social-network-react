{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogsItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","className","s","dialog","active","to","id","name","Message","message","maxLength10","maxLengthCreator","AddMessageReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","type","component","Textarea","placeholder","validate","required","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","key","messagesElements","messages","m","dialogsItems","formData","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,iHCWpMC,EARI,SAAAC,GACjB,OACE,yBAAKC,UAAS,UAAKC,IAAEC,OAAP,YAAiBD,IAAEE,SAC/B,kBAAC,IAAD,CAASC,GAAE,UAAK,UAAYL,EAAMM,KAAON,EAAMO,QCAtCC,EAJC,SAAAR,GACd,OAAO,yBAAKC,UAAWC,IAAEO,SAAUT,EAAMS,U,gBCOrCC,EAAcC,YAAiB,IAuB/BC,EAAsBC,YAAU,CACpCC,KAAM,wBADoBD,EArBL,SAACb,GAAW,IACzBe,EAAiBf,EAAjBe,aAER,OACE,0BAAMC,SAAUD,GACd,6BACE,kBAACE,EAAA,EAAD,CACEC,KAAK,WACLX,KAAK,iBACLY,UAAWC,IACXC,YAAY,qBACZC,SAAU,CAACC,IAAUb,MAGzB,6BACE,4BAAQQ,KAAK,UAAb,aAoCOM,EA1BC,SAACxB,GACf,IAIIyB,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAC1B,GAAD,OACtC,kBAAC,EAAD,CAAYI,KAAMJ,EAAOI,KAAMuB,IAAK3B,EAAOG,GAAIA,GAAIH,EAAOG,QAGxDyB,EAAmBN,EAAMO,SAASH,KAAI,SAACI,GAAD,OACxC,kBAAC,EAAD,CAASxB,QAASwB,EAAExB,QAASqB,IAAKG,EAAE3B,GAAIA,GAAI2B,EAAE3B,QAGhD,OACE,yBAAKL,UAAWC,IAAE0B,SAChB,yBAAK3B,UAAWC,IAAEgC,cAAeP,GACjC,yBAAK1B,UAAWC,IAAE8B,UAChB,6BAAMD,GACN,kBAACnB,EAAD,CAAqBI,SAnBL,SAACmB,GACrBnC,EAAMoC,YAAYD,EAASE,sB,uBCnBhBC,sBACbC,aAfoB,SAACd,GACrB,MAAO,CACLC,YAAaD,EAAMC,gBAIE,SAACc,GACxB,MAAO,CACLJ,YAAa,SAACC,GACZG,EAASC,YAAmBJ,SAOhCK,IAFaJ,CAGbd","file":"static/js/3.53c7e01f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3LQIZ\",\"dialogsItems\":\"Dialogs_dialogsItems__30SzP\",\"active\":\"Dialogs_active__7ksxA\",\"dialog\":\"Dialogs_dialog__3yeRh\",\"messages\":\"Dialogs_messages__2AiY_\",\"message\":\"Dialogs_message__2Lz5t\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst DialogItem = props => {\r\n  return (\r\n    <div className={`${s.dialog} ${s.active}`}>\r\n      <NavLink to={`${/dialogs/}${props.id}`}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = props => {\r\n  return <div className={s.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogsItem';\r\nimport Message from './Message/Message';\r\nimport {\r\n  required,\r\n  maxLengthCreator,\r\n} from './../../utilities/validators/validators';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddMessageForm = (props) => {\r\n  const { handleSubmit } = props;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field\r\n          type=\"textarea\"\r\n          name=\"newMessageBody\"\r\n          component={Textarea}\r\n          placeholder=\"Enter your message\"\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageReduxForm = reduxForm({\r\n  form: 'dialogAddMessageForm',\r\n})(AddMessageForm);\r\n\r\nconst Dialogs = (props) => {\r\n  const addNewMessage = (formData) => {\r\n    props.sendMessage(formData.newMessageBody);\r\n  };\r\n\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map((dialog) => (\r\n    <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />\r\n  ));\r\n\r\n  let messagesElements = state.messages.map((m) => (\r\n    <Message message={m.message} key={m.id} id={m.id} />\r\n  ));\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n        <AddMessageReduxForm onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from './../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}