{"version":3,"sources":["redux/dialogs-reducer.js","components/Users/User/User.module.css","assets/images/preloader.svg","components/News/News.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileDataForm/ProfileDataFormReduxForm.module.css","components/Login/Login.module.css","components/NotFound/NotFound.module.css","components/common/FormsControls/FormsControls.js","utilities/validators/validators.js","components/Navbar/Navbar.module.css","api/api.js","redux/profile-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.ts","redux/redux-store.js","components/Navbar/Navbar.js","components/common/Pagination/Pagination.js","components/Users/User/User.js","components/Users/Users.js","components/common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/UsersContainer.js","components/News/News.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/AddPostForm.js","components/Profile/MyPosts/MyPosts.js","components/Profile/ProfileStatus/ProfileStatusWithHooks.js","components/Profile/ProfileDataForm/ProfileDataFormReduxForm.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","components/Header/Header.js","components/Header/HeaderContainer.js","components/Login/Login.js","components/NotFound/NotFound.js","App.js","serviceWorker.js","index.js","components/common/FormsControls/FormsControls.module.css","hoc/withAuthRedirect.js","assets/images/user.png","components/common/Pagination/Pagination.module.css","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css"],"names":["initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","Textarea","input","meta","touched","error","placeholder","hasError","className","styles","formControl","Input","required","value","maxLengthCreator","maxLength","length","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","userId","delete","post","profileAPI","status","put","photoFile","formData","FormData","append","profile","authAPI","email","password","remeberMe","captcha","securityAPI","ADD_POST","posts","likesCount","setStatus","getUserProfile","dispatch","a","response","data","profileReducer","newPost","newPostText","filter","p","postId","photos","sidebarReducer","FOLLOW","users","portionSize","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","usersReducer","map","u","followed","count","login","isAuth","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","resultCode","getCaptchaUrl","url","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","s","nav","item","to","activeClassName","active","Pagination","onPageChanged","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","pagination","onClick","cn","selectedPage","pageNumber","key","User","unfollow","follow","user","index","style","avatar","alt","src","small","userPhoto","disabled","some","Users","Preloader","preloader","getUsers","getPageSize","getPortionSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","props","requestUsers","this","Component","connect","items","totalCount","withAuthRedirect","News","main","Post","maxLength15","reduxForm","handleSubmit","onSubmit","Field","component","validate","addPost","addPostActionCreator","postsElements","postsBlock","ProfileStatusWithHooks","editMode","setEditMode","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","maxLength30","ProfileDataFormReduxForm","Object","keys","contacts","formSummaryError","ProfileData","isOwner","goToEditMode","facebook","website","vk","twitter","instagram","youtube","github","mainLink","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","ProfileInfo","savePhoto","saveProfile","description","large","target","files","initialValues","then","Profile","ProfileContainer","match","params","authorizedUserId","getStatus","refreshprofile","prevProps","prevState","file","getState","stopSubmit","_error","Promise","reject","withRouter","Header","header","loginBlock","logout","HeaderContainer","React","LoginReduxForm","NotFound","notfound","DialogsContainer","lazy","App","initializeApp","exact","path","fallback","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","mapStateToPropsForRedirect","RedirectComponent"],"mappings":"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","file":"static/js/main.06a2579e.chunk.js","sourcesContent":["const SEND_MESSAGE = 'dialogs/SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    { id: 10, name: 'Jeniy' },\r\n    { id: 11, name: 'Dimych' },\r\n    { id: 12, name: 'Sveta' },\r\n    { id: 13, name: 'Sasha' },\r\n    { id: 14, name: 'Vika' },\r\n  ],\r\n  messages: [\r\n    { id: 1, message: 'Hi' },\r\n    { id: 2, message: 'How is your day' },\r\n    { id: 3, message: 'Yo' },\r\n    { id: 4, message: 'Yo' },\r\n    { id: 5, message: 'Yo' },\r\n  ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE: {\r\n      let body = action.newMessageBody;\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, { id: 6, message: body }],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({\r\n  type: SEND_MESSAGE,\r\n  newMessageBody,\r\n});\r\n\r\nexport default dialogsReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"User_avatar__ttca8\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.2ca02761.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"News_main__zoEFG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__nskEi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__1Pyx5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"ProfileDataFormReduxForm_formSummaryError__2j6hX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"Login_formSummaryError__1z14I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notfound\":\"NotFound_notfound__36K1O\"};","import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\n\r\nexport const Textarea = ({\r\n  input,\r\n  meta: { touched, error },\r\n  type,\r\n  placeholder,\r\n}) => {\r\n  const hasError = touched && error;\r\n\r\n  return (\r\n    <div className={`${styles.formControl} ${hasError ? styles.error : ''}`}>\r\n      <textarea {...input} type={type} placeholder={placeholder} />\r\n      {hasError && <span>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Input = ({\r\n  input,\r\n  meta: { touched, error },\r\n  type,\r\n  placeholder,\r\n}) => {\r\n  const hasError = touched && error;\r\n\r\n  return (\r\n    <div className={`${styles.formControl} ${hasError ? styles.error : ''}`}>\r\n      <input {...input} type={type} placeholder={placeholder} />\r\n      {hasError && <span>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n","export const required = (value) => {\r\n  if (value) {\r\n    return undefined;\r\n  }\r\n\r\n  return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value && value.length > maxLength) {\r\n    return `Max length is ${maxLength} symbols`;\r\n  }\r\n\r\n  return undefined;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__27UmN\",\"item\":\"Navbar_item__3k8Ku\",\"active\":\"Navbar_active__1UVo4\"};","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {\r\n    'API-KEY': 'a581eddc-6b2a-4437-9b2a-cfc6d6cb8bb3',\r\n  },\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage = 2, pageSize = 10) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`);\r\n  },\r\n  unfollow(userId) {\r\n    return instance.delete(`follow/${userId}`);\r\n  },\r\n  follow(userId) {\r\n    return instance.post(`follow/${userId}`);\r\n  },\r\n};\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId) {\r\n    return instance.get(`profile/${userId}`);\r\n  },\r\n  getStatus(userId) {\r\n    return instance.get(`profile/status/${userId}`);\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(`profile/status`, { status: status });\r\n  },\r\n  savePhoto(photoFile) {\r\n    let formData = new FormData();\r\n    formData.append('image', photoFile);\r\n    return instance.put(`profile/photo`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  },\r\n  saveProfile(profile) {\r\n    return instance.put(`profile`, profile);\r\n  },\r\n};\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`);\r\n  },\r\n  login(email, password, remeberMe = false, captcha = null) {\r\n    return instance.post(`auth/login`, { email, password, remeberMe, captcha });\r\n  },\r\n  logout() {\r\n    return instance.delete(`auth/login`);\r\n  },\r\n};\r\n\r\nexport const securityAPI = {\r\n  getCaptchaUrl() {\r\n    return instance.get(`security/get-captcha-url`);\r\n  },\r\n};\r\n","import { profileAPI } from '../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst ADD_POST = 'profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\r\nconst SET_STATUS = 'profile/SET_STATUS';\r\nconst DELETE_POST = 'profile/DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'profile/SAVE_PHOTO_SUCCESS';\r\n\r\nconst initialState = {\r\n  posts: [\r\n    { id: 1, message: 'Hi, how are you?', likesCount: 5 },\r\n    { id: 2, message: \"I'ts my first post\", likesCount: 3 },\r\n    { id: 3, message: 'Yo', likesCount: 101 },\r\n  ],\r\n  profile: null,\r\n  status: '',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      const newPost = {\r\n        id: 4,\r\n        message: action.newPostText,\r\n        likesCount: 0,\r\n      };\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, newPost],\r\n        newPostText: '',\r\n      };\r\n    }\r\n    case SET_USER_PROFILE: {\r\n      return {\r\n        ...state,\r\n        profile: action.profile,\r\n      };\r\n    }\r\n    case SET_STATUS: {\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      };\r\n    }\r\n    case DELETE_POST: {\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((p) => p.id !== action.postId),\r\n      };\r\n    }\r\n    case SAVE_PHOTO_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        profile: { ...state.profile, photos: action.photos },\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({\r\n  type: ADD_POST,\r\n  newPostText,\r\n});\r\n\r\nexport const setUserProfile = (profile) => ({\r\n  type: SET_USER_PROFILE,\r\n  profile,\r\n});\r\n\r\nexport const setStatus = (status) => ({\r\n  type: SET_STATUS,\r\n  status,\r\n});\r\n\r\nexport const deletePost = (postId) => ({\r\n  type: DELETE_POST,\r\n  postId,\r\n});\r\n\r\nexport const savePhotoSuccess = (photos) => ({\r\n  type: SAVE_PHOTO_SUCCESS,\r\n  photos,\r\n});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  const response = await profileAPI.getProfile(userId);\r\n  dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n  const response = await profileAPI.getStatus(userId);\r\n  dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  try {\r\n    const response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(setStatus(status));\r\n    }\r\n  } catch (error) {\r\n    //error handling\r\n  }\r\n};\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n  const response = await profileAPI.savePhoto(file);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(savePhotoSuccess(response.data.data.photos));\r\n  }\r\n};\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n  const userId = getState().auth.id;\r\n  const response = await profileAPI.saveProfile(profile);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getUserProfile(userId));\r\n  } else {\r\n    dispatch(stopSubmit('editProfile', { _error: response.data.messages[0] }));\r\n    return Promise.reject(response.data.messages[0]);\r\n  }\r\n};\r\n\r\nexport default profileReducer;\r\n","const initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n  return state;\r\n};\r\n\r\nexport default sidebarReducer;\r\n","import { usersAPI } from './../api/api';\r\n\r\nconst FOLLOW = 'users/FOLLOW';\r\nconst UNFOLLOW = 'users/UNFOLLOW';\r\nconst SET_USERS = 'users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'users/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nconst initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  portionSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u) => {\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: true };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u) => {\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: false };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.users,\r\n      };\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      };\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.count,\r\n      };\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id !== action.userId),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage,\r\n});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n  type: SET_TOTAL_USERS_COUNT,\r\n  count: totalUsersCount,\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching,\r\n});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n  isFetching,\r\n  userId,\r\n});\r\n\r\nexport const requestUsers = (currentPage, pageSize) => async (dispatch) => {\r\n  dispatch(toggleIsFetching(true));\r\n  dispatch(setCurrentPage(currentPage));\r\n\r\n  const response = await usersAPI.getUsers(currentPage, pageSize);\r\n  dispatch(toggleIsFetching(false));\r\n  dispatch(setUsers(response.data.items));\r\n  dispatch(setTotalUsersCount(response.data.totalCount));\r\n};\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n  dispatch(toggleFollowingProgress(true, userId));\r\n  const response = await usersAPI.follow(userId);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(followSuccess(userId));\r\n  }\r\n  dispatch(toggleFollowingProgress(false, userId));\r\n};\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n  dispatch(toggleFollowingProgress(true, userId));\r\n  const response = await usersAPI.unfollow(userId);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(unfollowSuccess(userId));\r\n  }\r\n  dispatch(toggleFollowingProgress(false, userId));\r\n};\r\n\r\nexport default usersReducer;\r\n","import { authAPI, securityAPI } from '../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\nconst SET_CAPTCHA_URL_SUCCESS = 'auth/SET_CAPTCHA_URL_SUCCESS';\r\n\r\nconst initialState = {\r\n  id: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n  captchaUrl: null,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n    case SET_CAPTCHA_URL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({\r\n  type: SET_USER_DATA,\r\n  payload: { id, email, login, isAuth },\r\n});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n  type: SET_CAPTCHA_URL_SUCCESS,\r\n  payload: { captchaUrl },\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  const response = await authAPI.me();\r\n\r\n  if (response.data.resultCode === 0) {\r\n    const { id, login, email } = response.data.data;\r\n    dispatch(setAuthUserData(id, email, login, true));\r\n  }\r\n};\r\n\r\nexport const login = (email, password, remeberMe, captcha) => async (\r\n  dispatch\r\n) => {\r\n  const response = await authAPI.login(email, password, remeberMe, captcha);\r\n  if (response.data.resultCode === 0) {\r\n    //success, get auth data\r\n    dispatch(getAuthUserData());\r\n  } else {\r\n    if (response.data.resultCode === 10) {\r\n      dispatch(getCaptchaUrl());\r\n    }\r\n    const message =\r\n      response.data.messages.length > 0\r\n        ? response.data.messages[0]\r\n        : 'Common error';\r\n    dispatch(stopSubmit('login', { _error: message }));\r\n  }\r\n};\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n  const response = await securityAPI.getCaptchaUrl();\r\n  const captchaUrl = response.data.url;\r\n  dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  const response = await authAPI.logout();\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false));\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import { getAuthUserData } from './auth-reducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS';\r\n\r\nexport type initialStateType = {\r\n  initialized: boolean;\r\n};\r\n\r\nconst initialState: initialStateType = {\r\n  initialized: false,\r\n};\r\n\r\ntype initializedSuccessType = {\r\n  type: typeof INITIALIZED_SUCCESS;\r\n};\r\n\r\nconst appReducer = (state: initialStateType = initialState, action: any): initialStateType => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializedSuccess = (): initializedSuccessType => ({\r\n  type: INITIALIZED_SUCCESS,\r\n});\r\n\r\nexport const initializeApp = () => {\r\n  return (dispatch: any) => {\r\n    const promise = dispatch(getAuthUserData());\r\n    promise.then(() => {\r\n      dispatch(initializedSuccess());\r\n    });\r\n  };\r\n};\r\n\r\nexport default appReducer;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport sidebarReducer from './sidebar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport appReducer from './app-reducer';\r\n\r\nconst reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  sidebar: sidebarReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={s.nav}>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/profile\" activeClassName={s.active}>\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/dialogs\" activeClassName={s.active}>\r\n          Messages\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/users\" activeClassName={s.active}>\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/settings\" activeClassName={s.active}>\r\n          News\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from 'react';\r\nimport styles from './Pagination.module.css';\r\nimport cn from 'classnames';\r\n\r\nconst Pagination = ({\r\n  totalUsersCount,\r\n  pageSize,\r\n  currentPage,\r\n  onPageChanged,\r\n  portionSize,\r\n}) => {\r\n  let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={styles.pagination}>\r\n      {portionNumber > 1 && (\r\n        <button onClick={() => setPortionNumber(portionNumber - 1)}>\r\n          PREV\r\n        </button>\r\n      )}\r\n      {pages\r\n        .filter(\r\n          (p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber\r\n        )\r\n        .map((p) => {\r\n          return (\r\n            <span\r\n              className={cn(\r\n                {\r\n                  [styles.selectedPage]: currentPage === p,\r\n                },\r\n                styles.pageNumber\r\n              )}\r\n              key={p}\r\n              onClick={() => {\r\n                onPageChanged(p);\r\n              }}\r\n            >\r\n              {p}\r\n            </span>\r\n          );\r\n        })}\r\n      {portionCount > portionNumber && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber + 1);\r\n          }}\r\n        >\r\n          NEXT\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport style from './User.module.css';\r\nimport userPhoto from '../../../assets/images/user.png';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst User = ({ followingInProgress, unfollow, follow, user, index }) => {\r\n  return (\r\n    <div key={index}>\r\n      <span>\r\n        <div className={style.avatar}>\r\n          <NavLink to={'/profile/' + user.id}>\r\n            <img\r\n              alt=\"Avatar\"\r\n              src={user.photos.small != null ? user.photos.small : userPhoto}\r\n            />\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n          {user.followed ? (\r\n            <button\r\n              disabled={followingInProgress.some((id) => id === user.id)}\r\n              onClick={() => {\r\n                unfollow(user.id);\r\n              }}>\r\n              Unfollow\r\n            </button>\r\n          ) : (\r\n            <button\r\n              disabled={followingInProgress.some((id) => id === user.id)}\r\n              onClick={() => {\r\n                follow(user.id);\r\n              }}>\r\n              Follow\r\n            </button>\r\n          )}\r\n        </div>\r\n      </span>\r\n      <span>\r\n        <span>\r\n          <div>{user.name}</div>\r\n          <div>{user.status}</div>\r\n        </span>\r\n        <span>\r\n          <div>{'user.location.country'}</div>\r\n          <div>{'user.location.city'}</div>\r\n        </span>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport Pagination from '../common/Pagination/Pagination';\r\nimport User from './User/User';\r\n\r\nconst Users = ({\r\n  totalUsersCount,\r\n  pageSize,\r\n  portionSize,\r\n  currentPage,\r\n  onPageChanged,\r\n  users,\r\n  followingInProgress,\r\n  unfollow,\r\n  follow,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Pagination\r\n        totalUsersCount={totalUsersCount}\r\n        pageSize={pageSize}\r\n        portionSize={portionSize}\r\n        currentPage={currentPage}\r\n        onPageChanged={onPageChanged}\r\n      />\r\n      <div>\r\n        {users.map((user, index) => (\r\n          <User\r\n            user={user}\r\n            index={index}\r\n            followingInProgress={followingInProgress}\r\n            unfollow={unfollow}\r\n            follow={follow}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from 'react';\r\nimport preloader from '../../../assets/images/preloader.svg';\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div>\r\n      <img src={preloader} alt=\"preloader\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","export const getUsers = (state) => {\r\n  return state.usersPage.users;\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getPortionSize = (state) => {\r\n  return state.usersPage.portionSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress;\r\n};\r\n","import React, { Component } from 'react';\r\nimport {\r\n  follow,\r\n  unfollow,\r\n  setCurrentPage,\r\n  toggleFollowingProgress,\r\n  requestUsers,\r\n} from './../../redux/users-reducer';\r\nimport { connect } from 'react-redux';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { withAuthRedirect } from './../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport {\r\n  getUsers,\r\n  getPageSize,\r\n  getPortionSize,\r\n  getTotalUsersCount,\r\n  getCurrentPage,\r\n  getIsFetching,\r\n  getFollowingInProgress,\r\n} from './../../redux/users-selectors';\r\n\r\nclass UsersContainer extends Component {\r\n  componentDidMount() {\r\n    const { currentPage, pageSize } = this.props;\r\n    this.props.requestUsers(currentPage, pageSize);\r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    this.props.requestUsers(pageNumber);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n        <Users\r\n          users={this.props.users}\r\n          pageSize={this.props.pageSize}\r\n          portionSize={this.props.portionSize}\r\n          totalUsersCount={this.props.totalUsersCount}\r\n          currentPage={this.props.currentPage}\r\n          onPageChanged={this.onPageChanged}\r\n          unfollow={this.props.unfollow}\r\n          follow={this.props.follow}\r\n          isFetching={this.props.isFetching}\r\n          followingInProgress={this.props.followingInProgress}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    portionSize: getPortionSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    requestUsers,\r\n  }),\r\n  withAuthRedirect\r\n)(UsersContainer);\r\n","import React from 'react';\r\nimport style from './News.module.css';\r\n\r\nexport default function News() {\r\n  return (\r\n    <div className={style.main}>\r\n      <p>There will be news</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\nconst Post = ({ message, likesCount }) => {\r\n  return (\r\n    <div className={style.item}>\r\n      <img src=\"https://international-advisory-experts.com/wp-content/uploads/2019/02/avatar-1-.png\"></img>\r\n      {message}\r\n      <div>\r\n        <span>like </span>\r\n        {likesCount}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport { required, maxLengthCreator } from './../../../utilities/validators/validators';\r\nimport { Textarea } from './../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength15 = maxLengthCreator(15);\r\n\r\nconst AddPostForm = ({ handleSubmit }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field\r\n          type=\"textarea\"\r\n          name=\"newPostText\"\r\n          component={Textarea}\r\n          placeholder=\"Enter your text\"\r\n          validate={[required, maxLength15]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({\r\n  form: 'profileAddPostForm',\r\n})(AddPostForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport style from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport AddPostForm from './AddPostForm';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\n\r\nconst MyPosts = ({ profilePage, addPost }) => {\r\n  let onAddPost = (formData) => {\r\n    addPost(formData.newPostText);\r\n  };\r\n\r\n  let state = profilePage;\r\n\r\n  let postsElements = state.posts.map((post) => (\r\n    <Post message={post.message} key={post.id} likesCount={post.likesCount} />\r\n  ));\r\n\r\n  return (\r\n    <div className={style.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddPostForm onSubmit={onAddPost} />\r\n      <div className={style.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profilePage: state.profilePage,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!editMode && (\r\n        <div>\r\n          <b>Status: </b>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || 'not status'}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            onChange={onStatusChange}\r\n            type=\"text\"\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport styles from './ProfileDataFormReduxForm.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input, Textarea } from '../../common/FormsControls/FormsControls';\r\nimport {\r\n  required,\r\n  maxLengthCreator,\r\n} from '../../../utilities/validators/validators';\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst ProfileDataForm = ({ handleSubmit, error, profile }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        Full name:\r\n        <Field\r\n          name=\"fullName\"\r\n          type=\"text\"\r\n          placeholder=\"Full name\"\r\n          component={Input}\r\n          validate={[required, maxLength30]}\r\n        />\r\n      </div>\r\n      <div>\r\n        About me:\r\n        <Field\r\n          name=\"aboutMe\"\r\n          type=\"text\"\r\n          placeholder=\"About me\"\r\n          component={Input}\r\n          validate={[required]}\r\n        />\r\n      </div>\r\n      <div>\r\n        Looking for a job:\r\n        <Field name=\"lookingForAJob\" type=\"checkbox\" component={Input} />\r\n      </div>\r\n      <div>\r\n        My professional skills:\r\n        <Field\r\n          name=\"lookingForAJobDescription\"\r\n          type=\"text\"\r\n          placeholder=\"My professional skills\"\r\n          component={Textarea}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        Contacts:\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <div key={key}>\r\n              {key}:\r\n              <Field name={'contacts.' + key} type=\"text\" component={Input} />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {error && <div className={styles.formSummaryError}>{error}</div>}\r\n\r\n      <div>\r\n        <button type=\"submit\">Save</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({\r\n  form: 'editProfile',\r\n})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;\r\n","import React, { useState } from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport userPhoto from '../../../assets/images/user.png';\r\nimport Preloader from '../../../components/common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './../ProfileStatus/ProfileStatusWithHooks';\r\nimport ProfileDataFormReduxForm from '../ProfileDataForm/ProfileDataFormReduxForm';\r\n\r\nconst ProfileInfo = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  isOwner,\r\n  savePhoto,\r\n  saveProfile,\r\n}) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const onMainFotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n\r\n  const goToEditMode = () => setEditMode(true);\r\n\r\n  return (\r\n    <div>\r\n      <div className={style.description}>\r\n        <div>\r\n          <img src={profile.photos.large || userPhoto} alt=\"Large avatar\" />\r\n          {isOwner && (\r\n            <div>\r\n              <b>Change Avatar: </b>\r\n              <input type=\"file\" onChange={onMainFotoSelected} />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n\r\n        {editMode ? (\r\n          <ProfileDataFormReduxForm\r\n            initialValues={profile}\r\n            onSubmit={onSubmit}\r\n            profile={profile}\r\n          />\r\n        ) : (\r\n          <ProfileData\r\n            profile={profile}\r\n            isOwner={isOwner}\r\n            goToEditMode={goToEditMode}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  const {\r\n    facebook,\r\n    website,\r\n    vk,\r\n    twitter,\r\n    instagram,\r\n    youtube,\r\n    github,\r\n    mainLink,\r\n  } = profile.contacts;\r\n\r\n  return (\r\n    <div>\r\n      <div>Full name: {profile.fullName}</div>\r\n      <div>About me: {profile.aboutMe}</div>\r\n      <div>Looking for a job: {profile.lookingForAJob ? 'Yes' : 'No'}</div>\r\n      {profile.lookingForAJob && (\r\n        <div>My professional skills: {profile.lookingForAJobDescription}</div>\r\n      )}\r\n\r\n      <div>\r\n        Contacts:\r\n        {facebook ? <div>Facebook: {facebook}</div> : null}\r\n        {website ? <div>Website: {website}</div> : null}\r\n        {vk ? <div>VK: {vk}</div> : null}\r\n        {twitter ? <div>Twitter: {twitter}</div> : null}\r\n        {instagram ? <div>Instagram: {instagram}</div> : null}\r\n        {youtube ? <div>Youtube: {youtube}</div> : null}\r\n        {github ? <div>Github: {github}</div> : null}\r\n        {mainLink ? <div>MainLink: {mainLink}</div> : null}\r\n      </div>\r\n      {isOwner && (\r\n        <div>\r\n          <button onClick={goToEditMode}>Edit</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  isOwner,\r\n  savePhoto,\r\n  saveProfile,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        isOwner={isOwner}\r\n        profile={profile}\r\n        status={status}\r\n        updateStatus={updateStatus}\r\n        savePhoto={savePhoto}\r\n        saveProfile={saveProfile}\r\n      />\r\n      <MyPosts />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n} from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from './../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends Component {\r\n  refreshprofile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshprofile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshprofile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile\r\n          {...this.props}\r\n          isOwner={!this.props.match.params.userId}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n          savePhoto={this.props.savePhoto}\r\n          saveProfile={this.props.saveProfile}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={s.header}>\r\n      <h3 className={s.name}>Social Network</h3>\r\n      <div className={s.loginBlock}>\r\n        {props.isAuth ? (\r\n          <div>\r\n            {props.login} - <button onClick={props.logout}>Log out </button>\r\n          </div>\r\n        ) : (\r\n          <NavLink to=\"/login\">Sign in </NavLink>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);\r\n","import React from 'react';\r\nimport styles from './Login.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {\r\n  required,\r\n  maxLengthCreator,\r\n} from './../../utilities/validators/validators';\r\nimport { Input } from '../common/FormsControls/FormsControls';\r\nimport { connect } from 'react-redux';\r\nimport { login } from './../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <Field\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n            component={Input}\r\n            validate={[required, maxLength30]}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Field\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            component={Input}\r\n            validate={[required, maxLength30]}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Field name=\"rememberMe\" type=\"checkbox\" component={Input} />\r\n          remember me\r\n        </div>\r\n        {captchaUrl && <img alt=\"captcha\" src={captchaUrl} />}\r\n        {captchaUrl && (\r\n          <Field\r\n            name=\"captcha\"\r\n            type=\"text\"\r\n            placeholder=\"Enter characters\"\r\n            component={Input}\r\n            validate={[required]}\r\n          />\r\n        )}\r\n        {error && <div className={styles.formSummaryError}>{error}</div>}\r\n        <div>\r\n          <button type=\"submit\">Login</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n  form: 'login',\r\n})(LoginForm);\r\n\r\nconst Login = ({ login, isAuth, captchaUrl }) => {\r\n  const onSubmit = (formData) => {\r\n    const { email, password, remeberMe, captcha } = formData;\r\n    login(email, password, remeberMe, captcha);\r\n  };\r\n\r\n  if (isAuth) {\r\n    return <Redirect to=\"/profile\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <h1>Login</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl} />\r\n      <p>If you don't have an account, use test login and password.</p>\r\n      <p>Login: free@samuraijs.com</p>\r\n      <p>Password: free</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { isAuth: state.auth.isAuth, captchaUrl: state.auth.captchaUrl };\r\n};\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from 'react';\r\nimport style from './NotFound.module.css';\r\n\r\nconst NotFound = () => {\r\n  return <h2 className={style.notfound}>404 Page not found</h2>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component, Suspense, lazy } from 'react';\r\nimport { compose } from 'redux';\r\nimport { Route, withRouter, Switch, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport News from './components/News/News';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport { initializeApp } from './redux/app-reducer';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport NotFound from './components/NotFound/NotFound';\r\n\r\nconst DialogsContainer = lazy(() =>\r\n  import('./components/Dialogs/DialogsContainer')\r\n);\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className=\"app-wrapper-content\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Redirect to=\"/profile\" />\r\n            </Route>\r\n            <Route path=\"/profile/:userId?\">\r\n              <ProfileContainer />\r\n            </Route>\r\n            <Route path=\"/dialogs\">\r\n              <Suspense fallback={<div>Загрузка...</div>}>\r\n                <DialogsContainer />\r\n              </Suspense>\r\n            </Route>\r\n            <Route path=\"/users\">\r\n              <UsersContainer />\r\n            </Route>\r\n            <Route path=\"/settings\">\r\n              <News />\r\n            </Route>\r\n            <Route path=\"/login\">\r\n              <Login />\r\n            </Route>\r\n            <Route path=\"*\">\r\n              <NotFound />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { initializeApp }),\r\n  withRouter\r\n)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport store from './redux/redux-store';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </HashRouter>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1jpOI\",\"error\":\"FormsControls_error__31Qb6\"};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {\r\n        return <Redirect to=\"/login\" />;\r\n      }\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/user.86a3e52d.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__3VpnW\",\"pageNumber\":\"Pagination_pageNumber__syIyC\",\"selectedPage\":\"Pagination_selectedPage__3Q5_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__15Miv\",\"name\":\"Header_name__3IDzf\",\"loginBlock\":\"Header_loginBlock__3cKxr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1JV0J\",\"posts\":\"MyPosts_posts__WxTG3\"};"],"sourceRoot":""}