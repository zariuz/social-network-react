{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogsItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","id","name","className","s","dialog","active","to","Message","message","maxLength10","maxLengthCreator","AddMessageReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","type","placeholder","component","Textarea","validate","required","Dialogs","sendMessage","state","dialogsPage","dialogsElements","dialogs","map","key","messagesElements","messages","m","dialogsItems","values","newMessageBody","compose","connect","actions","withAuthRedirect"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,iHCgBpMC,EARyB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KAC7C,OACE,yBAAKC,UAAS,UAAKC,IAAEC,OAAP,YAAiBD,IAAEE,SAC/B,kBAAC,IAAD,CAASC,GAAE,UAAK,UAAYN,IAAOC,KCD1BM,EAJsB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtC,OAAO,yBAAKN,UAAWC,IAAEK,SAAUA,I,gBCC/BC,EAAcC,YAAiB,IA4B/BC,EAAsBC,YAA8B,CACxDC,KAAM,wBADoBD,EArB4C,SAAC,GAElE,IADLE,EACI,EADJA,aAEA,OACE,0BAAMC,SAAUD,GACd,6BACE,kBAACE,EAAA,EAAD,CACEC,KAAK,WACLhB,KAAK,iBACLiB,YAAY,qBACZC,UAAWC,IACXC,SAAU,CAACC,IAAUb,MAGzB,6BACE,4BAAQQ,KAAK,UAAb,aAwCOM,EA1BsB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,YAKlCC,EALiE,EAAlBC,YAO/CC,EAAkBF,EAAMG,QAAQC,KAAI,SAACzB,GAAD,OACtC,kBAAC,EAAD,CAAYH,KAAMG,EAAOH,KAAM6B,IAAK1B,EAAOJ,GAAIA,GAAII,EAAOJ,QAGxD+B,EAAmBN,EAAMO,SAASH,KAAI,SAACI,GAAD,OACxC,kBAAC,EAAD,CAASzB,QAASyB,EAAEzB,QAASsB,IAAKG,EAAEjC,QAGtC,OACE,yBAAKE,UAAWC,IAAEyB,SAChB,yBAAK1B,UAAWC,IAAE+B,cAAeP,GACjC,yBAAKzB,UAAWC,IAAE6B,UAChB,6BAAMD,GACN,kBAACpB,EAAD,CAAqBI,SAnBL,SAACoB,GACrBX,EAAYW,EAAOC,sB,wBCjCRC,sBACbC,aAPoB,SAACb,GACrB,MAAO,CACLC,YAAaD,EAAMC,eAKI,CAAEF,YAAae,IAAQf,cAChDgB,IAFaH,CAGbd","file":"static/js/3.a15d7fff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3LQIZ\",\"dialogsItems\":\"Dialogs_dialogsItems__30SzP\",\"active\":\"Dialogs_active__7ksxA\",\"dialog\":\"Dialogs_dialog__3yeRh\",\"messages\":\"Dialogs_messages__2AiY_\",\"message\":\"Dialogs_message__2Lz5t\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\ntype PropsType = {\r\n  id: number;\r\n  name: string;\r\n};\r\n\r\nconst DialogItem: React.FC<PropsType> = ({ id, name }) => {\r\n  return (\r\n    <div className={`${s.dialog} ${s.active}`}>\r\n      <NavLink to={`${/dialogs/}${id}`}>{name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\ntype PropsType = {\r\n  message: string;\r\n};\r\n\r\nconst Message: React.FC<PropsType> = ({ message }) => {\r\n  return <div className={s.message}>{message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { Field, reduxForm, InjectedFormProps } from 'redux-form';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogsItem';\r\nimport Message from './Message/Message';\r\nimport { required, maxLengthCreator } from '../../utilities/validators/validators';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { initialStateType } from '../../redux/dialogs-reducer';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\ntype PropsType = {\r\n  dialogsPage: initialStateType;\r\n  sendMessage: (messageText: string) => void;\r\n};\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<NewMessageFormType>> = ({\r\n  handleSubmit,\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field\r\n          type=\"textarea\"\r\n          name=\"newMessageBody\"\r\n          placeholder=\"Enter your message\"\r\n          component={Textarea}\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageReduxForm = reduxForm<NewMessageFormType>({\r\n  form: 'dialogAddMessageForm',\r\n})(AddMessageForm);\r\n\r\ntype NewMessageFormType = {\r\n  newMessageBody: string;\r\n};\r\n\r\nconst Dialogs: React.FC<PropsType> = ({ sendMessage, dialogsPage }) => {\r\n  const addNewMessage = (values: NewMessageFormType) => {\r\n    sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  let state = dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map((dialog) => (\r\n    <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />\r\n  ));\r\n\r\n  let messagesElements = state.messages.map((m) => (\r\n    <Message message={m.message} key={m.id} />\r\n  ));\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n        <AddMessageReduxForm onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport { actions } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { AppStateType } from '../../redux/redux-store';\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, { sendMessage: actions.sendMessage }),\r\n  withAuthRedirect,\r\n)(Dialogs);\r\n"],"sourceRoot":""}